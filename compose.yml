# For now, db is on server. If project had more traffic, would want to move db out into managed db solution and not on same server as backend.
services:
    nginx:
        image:  nginx:1.27.2
        restart: unless-stopped
        volumes:
        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        - ./certbot/conf:/etc/letsencrypt
        ports:
        - "80:80"
        - "443:443"
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        
    certbot:
        image: certbot/certbot:v0.36.0
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

    backend:
        image: jamesathanasiou/tracker:latest
        depends_on:
            - db
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
        restart: unless-stopped
        expose:
            - ${APP_PORT}
        env_file: '.env'
        command: yarn start
    db:
        build:
            context: ./
            dockerfile: ./Dockerfile.db
        restart: always
        user: postgres
        volumes:
            - db-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        expose:
            - ${DB_PORT}
        healthcheck:
            test: ['CMD', 'pg_isready']
            interval: 10s
            timeout: 5s
            retries: 5
    db-migration:
        image: jamesathanasiou/tracker:latest
        depends_on:
            db:
                condition: service_healthy
        env_file: '.env'
        command: yarn migrate

volumes:
    db-data:
