services:
    nginx:
        image:  nginx:1.27.2
        restart: unless-stopped
        volumes:
        - ./nginx/local.conf:/etc/nginx/conf.d/default.conf
        ports:
        # TODO add var?
        - "80:80"
    backend:
        container_name: backend-dev
        build:
            context: ./
            dockerfile: Dockerfile.dev
        depends_on:
            - db
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
        restart: unless-stopped
        expose:
            - ${APP_PORT}
        command: yarn dev
        volumes:
            - ./:/usr/src/app
            - /usr/src/app/node_modules

    db:
        container_name: db-dev
        build:
            context: ./
            dockerfile: ./Dockerfile.db
        restart: always
        user: postgres
        volumes:
            - db-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        expose:
            - ${DB_PORT}
        healthcheck:
            test: ['CMD', 'pg_isready']
            interval: 10s
            timeout: 5s
            retries: 5

    db-migration:
        container_name: db-migration-dev
        build:
            context: ./
            dockerfile: ./Dockerfile.db-migration
        depends_on:
            db:
                condition: service_healthy
        volumes:
            - /usr/src/app/node_modules
        command: yarn migrate

volumes:
    db-data:
