import {
    ColumnType,
    Generated,
    Insertable,
    Selectable,
    Updateable,
} from 'kysely';

/* 
  From docs:
  For production apps, it is recommended to automatically generate your Database interface by introspecting your production database or Prisma schemas. Generated types might differ in naming convention, internal order, etc. Find out more at "Generating types".
  */
export interface Database {
    person: PersonTable;
    friendship: FriendshipTable;
}

export interface PersonTable {
    // Columns that are generated by the database should be marked
    // using the `Generated` type. This way they are automatically
    // made optional in inserts and updates.
    id: Generated<number>;

    first_name: string;
    gender: 'man' | 'woman' | 'other';
    // optional field.
    last_name: string | null;

    created_at: ColumnType<Date, string | undefined, never>;
    updated_at: ColumnType<Date, string | undefined, string | undefined>;
}

// use wrappers to set types
export type Person = Selectable<PersonTable>;
export type NewPerson = Insertable<PersonTable>;
export type PersonUpdate = Updateable<PersonTable>;

export interface FriendshipTable {
    person_1_id: number;
    person_2_id: number;

    last_seen_at: ColumnType<Date, string | undefined, string | undefined>;
    last_contacted_at: ColumnType<Date, string | undefined, string | undefined>;
    created_at: ColumnType<Date, string | undefined, never>;
    updated_at: ColumnType<Date, string | undefined, string | undefined>;
}

export type Friendship = Selectable<FriendshipTable>;
export type NewFriendship = Insertable<FriendshipTable>;
export type FriendshipUpdate = Updateable<FriendshipTable>;
