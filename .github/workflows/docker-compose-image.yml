name: Docker Compose CI

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Check out the repo
              uses: actions/checkout@v4

            - name: Login to dockerhub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push to dockerhub
              uses: docker/build-push-action@v5
              with:
                  push: true
                  tags: jamesathanasiou/tracker:latest

    deploy:
        needs: build
        name: deploy
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Set permissions for private key
              run: |
                  echo "${{ secrets.EC2_KEY_PERM }}" > key.pem
                  chmod 400 key.pem
            # TODO: a way to only pull in these files and not the whole repo?
            - name: Pull Dockerfiles and compose.yml
              uses:  easingthemes/ssh-deploy@v5.1.0 
              env:
                SSH_PRIVATE_KEY: ${{ secrets.EC2_KEY_PERM  }}
                SOURCE: "./"
                REMOTE_HOST: "${{ secrets.EC2_IP }}"
                REMOTE_USER: "ec2-user"
                TARGET: "~/tracker/"
            - name: Stop running containers
              # Stop all containers, remove them, prune dangling images.
              # TODO: prepoulate known hosts. In a real prod environment, ignoring host key checks is a serious security issue.
              run: |
                  ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.EC2_IP }}  'sudo docker stop $(docker ps -a -q) || true'
                  ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.EC2_IP }}  'sudo docker rm $(docker ps -a -q) || true'
                  ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.EC2_IP }}  'sudo yes | docker image prune || true'
            # As a reminder, from initial setup the directory and .env file were added.
            - name: docker-compose build
              run: |
                  ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.EC2_IP }}  'docker-compose -f compose.yml --env-file tracker/.env build'
            - name: docker-compose run
              run: |
                  ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.EC2_IP }}  'docker-compose -f compose.yml --env-file tracker/.env  up'
